# Функція, яка приймає рядок як вхідний параметр, додає всі його символи до двосторонньої черги 
# (deque з модуля collections в Python), а потім порівнює символи з обох кінців черги, щоб визначити, 
# чи є рядок паліндромом. Програма повинна правильно враховувати як рядки з парною, так і з непарною кількістю символів, 
# а також бути нечутливою до регістру та пробілів.

# Як працює:
# формує двосторонню чергу з нормалізованих символів;
# у циклі знімає символ з лівого кінця (popleft) і правого (pop) та порівнює;
# якщо всі пари співпали (довжина 0 або 1) — це паліндром.


from collections import deque

def is_palindrome(s: str) -> bool:
    """
    Перевіряє, чи є рядок паліндромом.
    Нечутлива до регістру та ігнорує пробіли.
    """
    # нормалізація: нижній регістр (краще casefold для юнікоду) + без пробілів
    normalized = ''.join(ch.casefold() for ch in s if not ch.isspace())

    dq = deque(normalized)

    # порівнюємо символи з обох кінців
    while len(dq) > 1:
        if dq.popleft() != dq.pop():
            return False
    return True


# приклади
tests = [
    "А роза упала на лапу Азора",
    "Never odd or even",
    "Step on no pets",
    "palindrome",
    "Тато в тАТ"
]

for t in tests:
    print(f"{t!r} -> {is_palindrome(t)}")
